name: 'Terraform'

on:
  push:
    branches:
    - main
  pull_request:

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: [physical, logical]

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    # Install the latest version of Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.3.9

    - name: Terraform ${{ matrix.module }} Module Init
      run: terraform init
      working-directory: ./terraform/${{ matrix.module }}

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format Check
      run: terraform fmt -check
      working-directory: ./terraform/${{ matrix.module }}

    # Performs linting on the Terraform files
    - name: Terraform Linter
      uses: reviewdog/action-tflint@master
      with:
        github_token: ${{ secrets.github_token }}
        working_directory: "./terraform/${{ matrix.module }}" # Optional. Change working directory
        reporter: github-pr-review # Optional. Change reporter
        fail_on_error: "true" # Optional. Fail action if errors are found
        filter_mode: "nofilter" # Optional. Check all files, not just the diff
        tflint_rulesets: "aws" # Optional. Extra official rulesets to install

    - name: Terraform Security Review
      uses: reviewdog/action-tfsec@master
      with:
        github_token: ${{ secrets.github_token }}
        working_directory: ./terraform/${{ matrix.module }}
        level: info
        reporter: github-pr-review
        filter_mode: nofilter
        tfsec_version: v1.28.0
        tfsec_flags: --exclude-downloaded-modules



