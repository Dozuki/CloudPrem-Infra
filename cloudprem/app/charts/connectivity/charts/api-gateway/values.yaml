# Default values for api-gateway.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## Provide the amount of pods if HPA is not enabled
##
replicaCount: 2

## Provide the image docker tag default: latest
##
appVersion: latest

## Manage docker image properties
##
image:
  ## Provide docker repository hub
  ##
  repository: frontegg/hybrid-api-gateway
  ## Provide image pull policy
  ##
  pullPolicy: Always

## Provide secret name for frontegg's repository
##
imagePullSecrets:
 - name: regcred

## Provide a name in place of api-gateway for `app:` labels
##
nameOverride: ""
## Provide a name in place of {releaseName}-api-gateway
##
fullnameOverride: ""

## Setup Service properties for team-management-service (open only one port)
##
service:
  ## Set service type
  ##
  type: ClusterIP
  ## Set service port
  ##
  protocol: TCP
  ## Set service target port to map
  ##
  port: 80
  ## Set port protocol default: TCP
  ##
  targetPort: 9090
  ## Set port name
  ##
  name: access-port

## HPA properties for team-management-service
## If autoscaling is enabled it will monitor the service and raise or lower pods amount based upon usage
## If autoscaling is disabled team-management-service will be managed by replicaset with `replicaCount` determine pod amount
##
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 4
  targetCPUUtilizationPercentage: 75
  targetMemoryUtilizationPercentage: 75

## Enable Ingress if access from the internet is needed
##
ingress:
  enabled: false
  ## provide a different name for the host path example: api.acme.com
  ##
  hostnameOverride: ""
  ## provide the needed ingress annotation
  # example:
  #  kubernetes.io/tls-acme: "true"
  #  kubernetes.io/ingress.class: "nginx"
  #  ingress.kubernetes.io/force-ssl-redirect: "true"
  #  nginx.ingress.kubernetes.io/server-snippet: |
  #    location ~* ^/(metrics|healthcheck) {
  #      deny all;
  #      return 403;
  #    }
  annotations: {}
  ## If enabled ingress will search for secret to enable TLS
  ##
  tls:
    enabled: false
    secretName: ""

## Set api-gateway resources
##
resources:
  requests:
    cpu: 250m
    memory: 512Mi
  limits:
    cpu: 250m
    memory: 512Mi

nodeSelector:
  "beta.kubernetes.io/os": linux

## Provide deployment tolerations
##
tolerations: []

## Provide deployment affinity
##
affinity: {}

configuration:
  secrets: {}
  map: {}

## Frontegg's services url for inner communications
## Provide an alternate url for a service if a service name was changed
##
network:
  adminsServiceUrl: http://frontegg-admins-service
  auditsServiceUrl: http://frontegg-audits-service
  authenticationServiceUrl: http://frontegg-authentication-service
  metadataServiceUrl: http://frontegg-metadata-service
  notificationServiceUrl: http://frontegg-notification-service
  reportsEngineUrl: http://frontegg-reporting-engine
  reportsServiceUrl: http://frontegg-reporting-service
  teamServiceUrl: http://frontegg-team-management-service
  vendorsServiceUrl: http://frontegg-vendors-service
  tenantsServiceUrl: http://frontegg-tenants-service
  webpushServiceUrl: http://frontegg-webpush-service
  featureFlagsServiceUrl: http://frontegg-feature-flags-service
  webhookServiceUrl: http://frontegg-webhook-service
  eventsServiceUrl: http://frontegg-event-service
  identityServiceUrl: http://frontegg-identity-service
  integrationsServiceUrl: http://frontegg-integrations-service

frontegg:
 authenticationPublicKey: ""
 apiGatewayUrl: https://api.frontegg.com
 authenticationServiceUrl: "https://api.frontegg.com/auth/vendor"
 metadataServiceUrl: https://api.frontegg.com/metadata
 hybridServices: "identity,team"

podAnnotations: {}
podLabels: {}
