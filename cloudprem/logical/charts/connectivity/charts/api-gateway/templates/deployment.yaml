apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "api-gateway.fullname" . }}-deployment
  labels:
    {{- include "api-gateway.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "api-gateway.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.frontegg.com/appVersion: "{{ .Values.appVersion }}"
        {{- include "api-gateway.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels  }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/configuration.secrets: {{ (print .Values.configuration.secrets) | sha256sum }}
        checksum/configuration.map: {{ (print .Values.configuration.map) | sha256sum }}
        checksum/configmap: {{ (print .Values.configmap) | sha256sum }}
        checksum/template.config-map: {{ include (print $.Template.BasePath "/config-map.yaml") . | sha256sum }}
        checksum/template.secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}

      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.appVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }} # change this to 80 in the future
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: http
            initialDelaySeconds: 20
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          env:
          {{- range $secret_name, $values := .Values.configuration.secrets }}
          {{- range $key, $value :=  $values}}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ $secret_name }}
                  key: {{ $value }}
          {{- end }}
          {{- end }}
          {{- range $config_name, $values := .Values.configuration.map }}
          {{- range $key, $value :=  $values}}
            - name: {{ $key }}
              valueFrom:
                configMapKeyRef:
                  name: {{ $config_name }}
                  key: {{ $value }}
          {{- end }}
          {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "api-gateway.fullname" . }}-configmap
            - secretRef:
                name: {{ include "api-gateway.fullname" . }}-secret

          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
